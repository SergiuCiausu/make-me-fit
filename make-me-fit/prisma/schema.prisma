// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Program {
  id                     Int                      @id @default(autoincrement())
  nume                   String                   @unique
  header                 String                   @db.Text
  heroP                  String                   @db.Text
  img                    String                   @default("") @db.VarChar(255)
  textBtn                String                   @db.VarChar(255)
  previewClip            String                   @db.VarChar(255)
  pret                   Int
  descriere              String                   @db.Text
  testimoniale           Testimonial[]
  retete                 Reteta[]                 @relation("ProgramReteta")
  exercitii              Exercitiu[]              @relation("ProgramExercitiu")
  progresii              Progresie[]              @relation("ProgramProgresie")
  controlGreutate        ControlGreutate[]        @relation("ProgramControlGreutate")
  ProgramReteta          ProgramReteta[]
  ProgramExercitiu       ProgramExercitiu[]
  ProgramProgresie       ProgramProgresie[]
  ProgramControlGreutate ProgramControlGreutate[]
}

model Testimonial {
  id        Int     @id @default(autoincrement())
  programId Int
  nume      String  @db.Text
  varsta    Int
  poza      String  @db.VarChar(255)
  descriere String  @db.Text
  programe  Program @relation(fields: [programId], references: [id], onDelete: Cascade)
}

model Reteta {
  id               Int                @id @default(autoincrement())
  nume             String             @db.Text
  poza             String             @db.VarChar(255)
  timpPreparare    Int
  ingrediente      Ingredient[]
  RetetaIngredient RetetaIngredient[]
  programe         Program[]          @relation("ProgramReteta")
  ProgramReteta    ProgramReteta[]
}

model ProgramReteta {
  programId Int
  retetaId  Int

  programe Program @relation(fields: [programId], references: [id])
  retete   Reteta  @relation(fields: [retetaId], references: [id])

  @@id([programId, retetaId])
}

model Ingredient {
  id       Int                @id @default(autoincrement())
  nume     String             @db.Text
  retete   RetetaIngredient[]
  Reteta   Reteta?            @relation(fields: [retetaId], references: [id])
  retetaId Int?
}

model RetetaIngredient {
  id           Int    @id @default(autoincrement())
  retetaId     Int
  ingredientId Int
  cantitate    String @db.VarChar(255)

  reteta     Reteta     @relation(fields: [retetaId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
}

model Exercitiu {
  id          Int           @id @default(autoincrement())
  nume        String        @db.VarChar(255)
  descriere   String?       @db.Text
  explicatie  String?       @db.Text
  poza        String        @db.VarChar(255)
  locatie     Locatie[]
  dificultate Dificultate[]
  durata      Int
  muschi      GrupeMuschi[]
  progresii   Progresie[]   @relation("ExercitiuProgresie")

  programe           Program              @relation("ProgramExercitiu", fields: [programId], references: [id])
  programId          Int
  ProgramExercitiu   ProgramExercitiu[]
  ExercitiuProgresie ExercitiuProgresie[]
}

model ProgramExercitiu {
  programId   Int
  exercitiuId Int

  programe  Program   @relation(fields: [programId], references: [id])
  exercitii Exercitiu @relation(fields: [exercitiuId], references: [id])

  @@id([programId, exercitiuId])
}

model ExercitiuProgresie {
  exercitiuId Int
  progresieId Int

  exercitii Exercitiu @relation(fields: [exercitiuId], references: [id])
  progresii Progresie @relation(fields: [progresieId], references: [id])

  @@id([exercitiuId, progresieId])
}

enum Locatie {
  ORIUNDE
  IN_SALA
}

enum Dificultate {
  INCEPATOR
  MEDIU
  AVANSAT
}

model Progresie {
  id         Int     @id @default(autoincrement())
  nume       String  @db.VarChar(255)
  descriere  String? @db.Text
  explicatie String? @db.Text
  poza       String  @db.VarChar(255)

  exercitiu          Exercitiu            @relation("ExercitiuProgresie", fields: [exercitiuId], references: [id])
  programe           Program?             @relation("ProgramProgresie", fields: [programId], references: [id])
  ExercitiuProgresie ExercitiuProgresie[]
  exercitiuId        Int
  programId          Int?
  ProgramProgresie   ProgramProgresie[]
}

model ProgramProgresie {
  programId   Int
  progresieId Int

  programe  Program   @relation(fields: [programId], references: [id])
  progresii Progresie @relation(fields: [progresieId], references: [id])

  @@id([programId, progresieId])
}

model ControlGreutate {
  id        Int    @id @default(autoincrement())
  programId Int
  nume      String @db.VarChar(255)

  programe               Program                  @relation("ProgramControlGreutate", fields: [programId], references: [id])
  ProgramControlGreutate ProgramControlGreutate[]
}

model ProgramControlGreutate {
  programId         Int
  controlGreutateId Int

  programe        Program         @relation(fields: [programId], references: [id])
  controlGreutate ControlGreutate @relation(fields: [controlGreutateId], references: [id])

  @@id([programId, controlGreutateId])
}

enum GrupeMuschi {
  ABDOMEN
  FESIERI
  COAPSE
  PIEPT
  BRATE
  UMERI
  SPATE
}
